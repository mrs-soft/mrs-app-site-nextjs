(()=>{"use strict";class t{constructor(t){this.widgetBox=void 0,this.redirectUrl="",this.productId=null,this.cardList=null,this.input=null,this.plus=null,this.minus=null,this.period=null,this.countName=null,this.monthPeriod=null,this.yearPeriod=null,this.widgetCreate=()=>{var t,i,s,e,n,o;const a=this.widgetBox,r=this.plans||[];let c=0,d=1,u=!1;r.forEach((t=>{t.maxLicenseCount>d&&(d=t.maxLicenseCount),t.discount>c&&(c=t.discount),t.maxLicenseCount===t.minLicenseCount||u||(u=!0)}));const l=`\n      <div class="saas-shop-container">\n        <div class="saas-shop-title">Выберите подписку</div>\n        <div class="saas-shop-common-form">\n         ${u?`<div class="saas-shop-count-container">\n            <div class="saas-shop-form-minus"></div>\n            <div class="body2">\n              <input class="saas-shop-form-input" type="number" name="count" min="1"  max="${d}" value="1" \n                      onkeydown="this.style.width = ((this.value.length+1 ) * 9) + 'px';" onkeyup="if(this.value<0) value=1;">\n              <span class="saas-shop-count-name">пользователь</span>\n            </div>\n            <div class="saas-shop-form-plus"></div>\n          </div>`:""}\n          <label class="saas-shop-period-container">\n            <input type="checkbox" class="saas-shop-period-input">\n            <button class="saas-shop-period-month">\n             Месячная\n            </button>\n            <button class="saas-shop-period-year">\n             Годовая\n            </button>  \n            ${c?`<div class="saas-shop-period-sale" > - ${c}% </div>`:""}\n          </label>\n        </div>\n        <div class="saas-shop-card-container"> \n          ${(()=>{let t="";return r.forEach((i=>{var s,e;const n=i.id===(null===(s=this.config)||void 0===s?void 0:s.hightlight)?"contained":"outlined",o=i.id===(null===(e=this.config)||void 0===e?void 0:e.subscriptionId)?"disabled":"";t+=`\n          <div class="saas-shop-card" data-tariffid="${i.id}" >\n            <div class="saas-shop-card-name subtitle2">${i.name}</div>\n            <h5 class="saas-shop-price-value">\n              ${i.price.toLocaleString()} ₽\n               <span> ₽ </span>\n            </h5>\n            <div class="saas-shop-price-text body2">за пользователя в </div>\n            <div class="saas-shop-description body2">${i.description}</div>\n              <button class="saas-shop-card-button-container ${n} large" disabled=${o}></button>\n          </div>    \n          `})),t})()}\n        </div>\n      </div>`;a.innerHTML+=l,this.cardList=document.querySelectorAll(".saas-shop-card"),this.input=document.querySelector(".saas-shop-form-input"),this.plus=document.querySelector(".saas-shop-form-plus"),this.minus=document.querySelector(".saas-shop-form-minus"),this.period=document.querySelector(".saas-shop-period-input"),this.countName=document.querySelector(".saas-shop-count-name"),this.monthPeriod=document.querySelector(".saas-shop-period-month"),this.yearPeriod=document.querySelector(".saas-shop-period-year"),this.checkTariff(r),null===(t=this.input)||void 0===t||t.addEventListener("change",(()=>{this.checkTariff(r)})),null===(i=this.plus)||void 0===i||i.addEventListener("click",(()=>{this.calcPlus(this.plus,d),this.checkTariff(r)})),null===(s=this.minus)||void 0===s||s.addEventListener("click",(()=>{this.calcMinus(this.minus),this.checkTariff(r)})),null===(e=this.monthPeriod)||void 0===e||e.addEventListener("click",(t=>{this.setPeriod(t.target,!1)})),null===(n=this.yearPeriod)||void 0===n||n.addEventListener("click",(t=>{this.setPeriod(t.target,!0)})),null===(o=this.period)||void 0===o||o.parentNode.addEventListener("click",(()=>{this.checkTariff(r)}))},this.checkLicensesCount=(t,i,s)=>{const e=t.querySelector(".saas-shop-card-button-container");return i>s.maxLicenseCount&&s.minLicenseCount!==s.maxLicenseCount?(e.setAttribute("disabled","disabled"),`До ${s.maxLicenseCount} ${this.conditionUserText(s.maxLicenseCount)}`):i<s.minLicenseCount&&s.maxLicenseCount!==s.minLicenseCount?(e.setAttribute("disabled","disabled"),`От ${s.minLicenseCount} ${this.conditionUserText(s.minLicenseCount)}`):void e.removeAttribute("disabled")},this.setButton=(t,i,s)=>{var e,n,o,a;const r=t.querySelector(".saas-shop-card-button-container");let c="";const d=(null===(e=this.config)||void 0===e?void 0:e.subscriptionId)!==i.id,u=i.maxLicenseCount!==i.minLicenseCount,l=i.discount?(null==i?void 0:i.price)*Number(null===(n=this.input)||void 0===n?void 0:n.value)*12*((100-i.discount)/100):(null==i?void 0:i.price)*Number(null===(o=this.input)||void 0===o?void 0:o.value)*12,h=(this.period.checked?l:(null==i?void 0:i.price)*Number(null===(a=this.input)||void 0===a?void 0:a.value)).toLocaleString();c=(null==i?void 0:i.price)&&d&&!s&&this.input&&u?`Купить за ${h} ₽`:!u&&d?`Выбрать ${i.name}`:s||"Текущий тариф";const p=this.createHref(i);d||r.setAttribute("disabled","disabled"),r.innerHTML=`\n      <a class="saas-shop-card-button-href" href="${p}" target="_blank">\n          ${c}\n      </a>\n      `},this.checkTariff=t=>{var i,s,e,n;null===(i=this.input)||void 0===i||(i.value=Number(this.input.value)>99999?99999:Number(null===(s=this.input)||void 0===s?void 0:s.value)),this.input&&(this.input.style.width=9*this.input.value.length+"px"),this.countName&&(this.countName.textContent=this.userText(Number(null===(e=this.input)||void 0===e?void 0:e.value)));for(const i of this.cardList){const s=t.find((t=>t.id.toString()===i.dataset.tariffid)),e=this.checkLicensesCount(i,Number(null===(n=this.input)||void 0===n?void 0:n.value),s);this.setButton(i,s,e);const o=i.querySelector(".saas-shop-price-text"),a=i.querySelector(".saas-shop-price-value"),r=this.period.checked?"за пользователя в год":"за пользователя в месяц",c=this.period.checked&&s.discount?(12*s.price*((100-s.discount)/100)).toLocaleString():(12*s.price).toLocaleString();o.textContent=s.maxLicenseCount===s.minLicenseCount?`до ${s.maxLicenseCount} пользователей`:r,a.textContent=this.period.checked?`${c} ₽`:`${s.price.toLocaleString()} ₽`}},this.createHref=t=>{var i,s;const e=this.period.checked?"&annually=true":"",n=(null===(i=this.input)||void 0===i?void 0:i.value)&&t.maxLicenseCount!==t.minLicenseCount?null===(s=this.input)||void 0===s?void 0:s.value:t.maxLicenseCount;return this.redirectUrl+`/#/checkout?productId=${this.productId}&tariffId=${t.id}${e}&licensesCount=${n}`},this.calcPlus=(t,i)=>{const s=null==t?void 0:t.parentNode.querySelector(".saas-shop-form-input"),e=parseInt(s.value)+1;i>=e&&(s.value=e)},this.calcMinus=t=>{let i=null==t?void 0:t.parentNode.querySelector(".saas-shop-form-input"),s=parseInt(i.value)-1;1<=s&&(i.value=s)},this.setPeriod=(t,i)=>{(null==t?void 0:t.parentNode.querySelector(".saas-shop-period-input")).checked=i},this.userText=t=>{const i=+t.toString().slice(-1),s=+t.toString().slice(-2,-1);return 1===i&&1!==s?"пользователь":i>1&&i<5&&1!==s?"пользователя":"пользователей"},this.conditionUserText=t=>"1"===t.toString().slice(-1)?"пользователя":"пользователей",this.widgetBox=t.widgetBox,this.redirectUrl=t.redirectUrl,this.productId=t.productId,this.plans=t.plans,this.config=t.config}}const i="saas-shop.citronium.com"===location.host?"https://account.saas-shop.citronium.com":"http://localhost:4001";var s=new class{constructor(t){this.idContainer="",this.api="",this.redirectUrl="",this.productId=null,this.idContainer=t.idContainer,this.api=t.api,this.redirectUrl=t.redirectUrl,this.productId=t.productId}init(i){fetch(this.api+"/products/"+this.productId+"/plans").then((function(t){return 200!==t.status?Promise.reject(new Error(t.statusText)):Promise.resolve(t)})).then((function(t){return t.json()})).then((s=>{document.querySelector(this.idContainer)?new t({widgetBox:document.querySelector(this.idContainer),redirectUrl:this.redirectUrl,productId:this.productId,plans:s,config:i}).widgetCreate():alert("Container with id "+this.idContainer+" not found!")})).catch((t=>{console.log(t)}))}}({idContainer:".saas_shop_tariffs",api:"https://saas-shop-api.dev.mrsapp.ru",redirectUrl:i,productId:"93c56a4c-3324-454d-9dff-094335f66f40"});window.WidgetConfig={subscriptionId:"3"},window.WidgetConfig?s.init(window.WidgetConfig):s.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQ05DLFFBQVFDLElBQUlGLEVBQU0sR0FFeEIsR0RuQzBDLENBQzFDaEIsWUFIa0IscUJBSWxCQyxJQVBVLHNDQVFWMUYsY0FDQUMsVUFWZ0IseUNBYWxCMkcsT0FBT0MsYUFBZSxDQUNwQmpGLGVBQWdCLEtBR2RnRixPQUFPQyxhQUNUckIsRUFBVUcsS0FBS2lCLE9BQU9DLGNBQ2pCckIsRUFBVUcsTSIsInNvdXJjZXMiOlsid2VicGFjazovL3NhYXMtc2hvcC1zaXRlLy4vc3JjL3ByZXNlbnRlci93aWRnZXRCb3gvV2lkZ2V0Qm94LnRzIiwid2VicGFjazovL3NhYXMtc2hvcC1zaXRlLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovL3NhYXMtc2hvcC1zaXRlLy4vc3JjL3ByZXNlbnRlci9XaWRnZXRTYWFzU2hvcFByZXNlbnRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQ29uZmlnIH0gZnJvbSAnLi4vSVdpZGdldFNhYXNTaG9wJ1xuaW1wb3J0IHsgSVBsYW4sIElXaWRnZXRCb3gsIElXaWRnZXRCb3hQYXJhbXMgfSBmcm9tICcuL0lXaWRnZXRCb3gnXG5cbmV4cG9ydCBjbGFzcyBXaWRnZXRCb3ggaW1wbGVtZW50cyBJV2lkZ2V0Qm94IHtcbiAgd2lkZ2V0Qm94OiBIVE1MRGl2RWxlbWVudCB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZFxuICByZWRpcmVjdFVybDogc3RyaW5nID0gJydcbiAgcHJvZHVjdElkOiBzdHJpbmcgfCBudWxsID0gbnVsbFxuICBwbGFuczogSVBsYW5bXVxuICBjb25maWc6IElDb25maWdcblxuICBwcml2YXRlIGNhcmRMaXN0OiBOb2RlTGlzdE9mPEhUTUxEaXZFbGVtZW50PiB8IG51bGwgPSBudWxsXG4gIHByaXZhdGUgaW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgfCBudWxsID0gbnVsbFxuICBwcml2YXRlIHBsdXM6IEhUTUxEaXZFbGVtZW50IHwgbnVsbCA9IG51bGxcbiAgcHJpdmF0ZSBtaW51czogSFRNTERpdkVsZW1lbnQgfCBudWxsID0gbnVsbFxuICBwcml2YXRlIHBlcmlvZDogSFRNTElucHV0RWxlbWVudCB8IG51bGwgPSBudWxsXG4gIHByaXZhdGUgY291bnROYW1lOiBIVE1MU3BhbkVsZW1lbnQgfCBudWxsID0gbnVsbFxuICBwcml2YXRlIG1vbnRoUGVyaW9kOiBIVE1MQnV0dG9uRWxlbWVudCB8IG51bGwgPSBudWxsXG4gIHByaXZhdGUgeWVhclBlcmlvZDogSFRNTEJ1dHRvbkVsZW1lbnQgfCBudWxsID0gbnVsbFxuXG4gIGNvbnN0cnVjdG9yKHBhcmFtczogSVdpZGdldEJveFBhcmFtcykge1xuICAgIHRoaXMud2lkZ2V0Qm94ID0gcGFyYW1zLndpZGdldEJveFxuICAgIHRoaXMucmVkaXJlY3RVcmwgPSBwYXJhbXMucmVkaXJlY3RVcmxcbiAgICB0aGlzLnByb2R1Y3RJZCA9IHBhcmFtcy5wcm9kdWN0SWRcbiAgICB0aGlzLnBsYW5zID0gcGFyYW1zLnBsYW5zXG4gICAgdGhpcy5jb25maWcgPSBwYXJhbXMuY29uZmlnXG4gIH1cblxuICB3aWRnZXRDcmVhdGUgPSAoKTogdm9pZCA9PiB7XG4gICAgY29uc3Qgd2lkZ2V0Qm94ID0gdGhpcy53aWRnZXRCb3hcbiAgICBjb25zdCB0YXJpZmZMaXN0OiBJUGxhbltdID0gdGhpcy5wbGFucyB8fCBbXVxuICAgIGxldCBkaXNjb3VudDogbnVtYmVyID0gMFxuICAgIGxldCBtYXhpbXVtVXNlcnM6IG51bWJlciA9IDFcbiAgICBsZXQgaXNDb3VudENvbnRhaW5lciA9IGZhbHNlXG5cbiAgICB0YXJpZmZMaXN0LmZvckVhY2goKGVsKSA9PiB7XG4gICAgICBpZiAoZWwubWF4TGljZW5zZUNvdW50ID4gbWF4aW11bVVzZXJzKSB7XG4gICAgICAgIG1heGltdW1Vc2VycyA9IGVsLm1heExpY2Vuc2VDb3VudFxuICAgICAgfVxuXG4gICAgICBpZiAoZWwuZGlzY291bnQgPiBkaXNjb3VudCkge1xuICAgICAgICBkaXNjb3VudCA9IGVsLmRpc2NvdW50XG4gICAgICB9XG5cbiAgICAgIGlmIChlbC5tYXhMaWNlbnNlQ291bnQgIT09IGVsLm1pbkxpY2Vuc2VDb3VudCAmJiAhaXNDb3VudENvbnRhaW5lcikge1xuICAgICAgICBpc0NvdW50Q29udGFpbmVyID0gdHJ1ZVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zdCBvdXRwdXRDYXJkTGlzdCA9ICgpID0+IHtcbiAgICAgIGxldCB0ZW1wb3JhcnlDYXJkID0gYGBcbiAgICAgIHRhcmlmZkxpc3QuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgY29uc3Qgc3R5bGVGb3JCdG4gPSBlbC5pZCA9PT0gdGhpcy5jb25maWc/LmhpZ2h0bGlnaHQgPyAnY29udGFpbmVkJyA6ICdvdXRsaW5lZCdcbiAgICAgICAgY29uc3QgaXNEaXNhYmxlZCA9IGVsLmlkID09PSB0aGlzLmNvbmZpZz8uc3Vic2NyaXB0aW9uSWQgPyAnZGlzYWJsZWQnIDogJydcblxuICAgICAgICB0ZW1wb3JhcnlDYXJkICs9IGBcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwic2Fhcy1zaG9wLWNhcmRcIiBkYXRhLXRhcmlmZmlkPVwiJHtlbC5pZH1cIiA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2Fhcy1zaG9wLWNhcmQtbmFtZSBzdWJ0aXRsZTJcIj4ke2VsLm5hbWV9PC9kaXY+XG4gICAgICAgICAgICA8aDUgY2xhc3M9XCJzYWFzLXNob3AtcHJpY2UtdmFsdWVcIj5cbiAgICAgICAgICAgICAgJHtlbC5wcmljZS50b0xvY2FsZVN0cmluZygpfSDigr1cbiAgICAgICAgICAgICAgIDxzcGFuPiDigr0gPC9zcGFuPlxuICAgICAgICAgICAgPC9oNT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzYWFzLXNob3AtcHJpY2UtdGV4dCBib2R5MlwiPtC30LAg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPINCyIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNhYXMtc2hvcC1kZXNjcmlwdGlvbiBib2R5MlwiPiR7ZWwuZGVzY3JpcHRpb259PC9kaXY+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJzYWFzLXNob3AtY2FyZC1idXR0b24tY29udGFpbmVyICR7c3R5bGVGb3JCdG59IGxhcmdlXCIgZGlzYWJsZWQ9JHtpc0Rpc2FibGVkfT48L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj4gICAgXG4gICAgICAgICAgYFxuICAgICAgfSlcbiAgICAgIHJldHVybiB0ZW1wb3JhcnlDYXJkXG4gICAgfVxuXG4gICAgY29uc3QgY291bnRMaWNlbnNlcyA9IGlzQ291bnRDb250YWluZXJcbiAgICAgID8gYDxkaXYgY2xhc3M9XCJzYWFzLXNob3AtY291bnQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2Fhcy1zaG9wLWZvcm0tbWludXNcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib2R5MlwiPlxuICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJzYWFzLXNob3AtZm9ybS1pbnB1dFwiIHR5cGU9XCJudW1iZXJcIiBuYW1lPVwiY291bnRcIiBtaW49XCIxXCIgIG1heD1cIiR7bWF4aW11bVVzZXJzfVwiIHZhbHVlPVwiMVwiIFxuICAgICAgICAgICAgICAgICAgICAgIG9ua2V5ZG93bj1cInRoaXMuc3R5bGUud2lkdGggPSAoKHRoaXMudmFsdWUubGVuZ3RoKzEgKSAqIDkpICsgJ3B4JztcIiBvbmtleXVwPVwiaWYodGhpcy52YWx1ZTwwKSB2YWx1ZT0xO1wiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInNhYXMtc2hvcC1jb3VudC1uYW1lXCI+0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2Fhcy1zaG9wLWZvcm0tcGx1c1wiPjwvZGl2PlxuICAgICAgICAgIDwvZGl2PmBcbiAgICAgIDogJydcblxuICAgIGNvbnN0IHRlbXBvcmFyeVdpZGdldCA9IGBcbiAgICAgIDxkaXYgY2xhc3M9XCJzYWFzLXNob3AtY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzYWFzLXNob3AtdGl0bGVcIj7QktGL0LHQtdGA0LjRgtC1INC/0L7QtNC/0LjRgdC60YM8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNhYXMtc2hvcC1jb21tb24tZm9ybVwiPlxuICAgICAgICAgJHtjb3VudExpY2Vuc2VzfVxuICAgICAgICAgIDxsYWJlbCBjbGFzcz1cInNhYXMtc2hvcC1wZXJpb2QtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJzYWFzLXNob3AtcGVyaW9kLWlucHV0XCI+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwic2Fhcy1zaG9wLXBlcmlvZC1tb250aFwiPlxuICAgICAgICAgICAgINCc0LXRgdGP0YfQvdCw0Y9cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInNhYXMtc2hvcC1wZXJpb2QteWVhclwiPlxuICAgICAgICAgICAgINCT0L7QtNC+0LLQsNGPXG4gICAgICAgICAgICA8L2J1dHRvbj4gIFxuICAgICAgICAgICAgJHtkaXNjb3VudCA/IGA8ZGl2IGNsYXNzPVwic2Fhcy1zaG9wLXBlcmlvZC1zYWxlXCIgPiAtICR7ZGlzY291bnR9JSA8L2Rpdj5gIDogJyd9XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzYWFzLXNob3AtY2FyZC1jb250YWluZXJcIj4gXG4gICAgICAgICAgJHtvdXRwdXRDYXJkTGlzdCgpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PmBcblxuICAgIHdpZGdldEJveC5pbm5lckhUTUwgKz0gdGVtcG9yYXJ5V2lkZ2V0XG5cbiAgICB0aGlzLmNhcmRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNhYXMtc2hvcC1jYXJkJylcbiAgICB0aGlzLmlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNhYXMtc2hvcC1mb3JtLWlucHV0JylcbiAgICB0aGlzLnBsdXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2Fhcy1zaG9wLWZvcm0tcGx1cycpXG4gICAgdGhpcy5taW51cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zYWFzLXNob3AtZm9ybS1taW51cycpXG4gICAgdGhpcy5wZXJpb2QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2Fhcy1zaG9wLXBlcmlvZC1pbnB1dCcpXG4gICAgdGhpcy5jb3VudE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2Fhcy1zaG9wLWNvdW50LW5hbWUnKVxuICAgIHRoaXMubW9udGhQZXJpb2QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2Fhcy1zaG9wLXBlcmlvZC1tb250aCcpXG4gICAgdGhpcy55ZWFyUGVyaW9kID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNhYXMtc2hvcC1wZXJpb2QteWVhcicpXG5cbiAgICB0aGlzLmNoZWNrVGFyaWZmKHRhcmlmZkxpc3QpXG5cbiAgICB0aGlzLmlucHV0Py5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XG4gICAgICB0aGlzLmNoZWNrVGFyaWZmKHRhcmlmZkxpc3QpXG4gICAgfSlcbiAgICB0aGlzLnBsdXM/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5jYWxjUGx1cyh0aGlzLnBsdXMsIG1heGltdW1Vc2VycylcbiAgICAgIHRoaXMuY2hlY2tUYXJpZmYodGFyaWZmTGlzdClcbiAgICB9KVxuICAgIHRoaXMubWludXM/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5jYWxjTWludXModGhpcy5taW51cylcbiAgICAgIHRoaXMuY2hlY2tUYXJpZmYodGFyaWZmTGlzdClcbiAgICB9KVxuXG4gICAgdGhpcy5tb250aFBlcmlvZD8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuc2V0UGVyaW9kKGV2ZW50LnRhcmdldCwgZmFsc2UpXG4gICAgfSlcblxuICAgIHRoaXMueWVhclBlcmlvZD8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuc2V0UGVyaW9kKGV2ZW50LnRhcmdldCwgdHJ1ZSlcbiAgICB9KVxuICAgIHRoaXMucGVyaW9kPy5wYXJlbnROb2RlIS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuY2hlY2tUYXJpZmYodGFyaWZmTGlzdClcbiAgICB9KVxuICB9XG5cbiAgcHJpdmF0ZSBjaGVja0xpY2Vuc2VzQ291bnQgPSAoZWw6IEhUTUxEaXZFbGVtZW50LCBpbnB1dFZhbHVlOiBudW1iZXIsIHRhcmlmZjogSVBsYW4pID0+IHtcbiAgICBjb25zdCBidG4gPSBlbC5xdWVyeVNlbGVjdG9yKCcuc2Fhcy1zaG9wLWNhcmQtYnV0dG9uLWNvbnRhaW5lcicpXG4gICAgaWYgKGlucHV0VmFsdWUgPiB0YXJpZmYubWF4TGljZW5zZUNvdW50ICYmIHRhcmlmZi5taW5MaWNlbnNlQ291bnQgIT09IHRhcmlmZi5tYXhMaWNlbnNlQ291bnQpIHtcbiAgICAgIGJ0bi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJylcbiAgICAgIHJldHVybiBg0JTQviAke3RhcmlmZi5tYXhMaWNlbnNlQ291bnR9ICR7dGhpcy5jb25kaXRpb25Vc2VyVGV4dCh0YXJpZmYubWF4TGljZW5zZUNvdW50KX1gXG4gICAgfSBlbHNlIGlmIChpbnB1dFZhbHVlIDwgdGFyaWZmLm1pbkxpY2Vuc2VDb3VudCAmJiB0YXJpZmYubWF4TGljZW5zZUNvdW50ICE9PSB0YXJpZmYubWluTGljZW5zZUNvdW50KSB7XG4gICAgICBidG4uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpXG4gICAgICByZXR1cm4gYNCe0YIgJHt0YXJpZmYubWluTGljZW5zZUNvdW50fSAke3RoaXMuY29uZGl0aW9uVXNlclRleHQodGFyaWZmLm1pbkxpY2Vuc2VDb3VudCl9YFxuICAgIH0gZWxzZSB7XG4gICAgICBidG4ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpXG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzZXRCdXR0b24gPSAoZWw6IEhUTUxEaXZFbGVtZW50LCB0YXJpZmY6IElQbGFuLCByZWFzb24/OiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBidXR0b24gPSBlbC5xdWVyeVNlbGVjdG9yKCcuc2Fhcy1zaG9wLWNhcmQtYnV0dG9uLWNvbnRhaW5lcicpXG4gICAgbGV0IHByaWNlVGV4dCA9ICcnXG5cbiAgICBjb25zdCBub3RDdXJyZW50VGFyaWZmID0gdGhpcy5jb25maWc/LnN1YnNjcmlwdGlvbklkICE9PSB0YXJpZmYuaWRcbiAgICBjb25zdCBub3RQYWNrYWdlVGFyaWZmID0gdGFyaWZmLm1heExpY2Vuc2VDb3VudCAhPT0gdGFyaWZmLm1pbkxpY2Vuc2VDb3VudFxuICAgIGNvbnN0IHByaWNlV2l0aERpc2NvdW50ID0gdGFyaWZmLmRpc2NvdW50XG4gICAgICA/IHRhcmlmZj8ucHJpY2UgKiBOdW1iZXIodGhpcy5pbnB1dD8udmFsdWUpICogMTIgKiAoKDEwMCAtIHRhcmlmZi5kaXNjb3VudCkgLyAxMDApXG4gICAgICA6IHRhcmlmZj8ucHJpY2UgKiBOdW1iZXIodGhpcy5pbnB1dD8udmFsdWUpICogMTJcblxuICAgIGNvbnN0IHByaWNlID0gKHRoaXMucGVyaW9kLmNoZWNrZWQgPyBwcmljZVdpdGhEaXNjb3VudCA6IHRhcmlmZj8ucHJpY2UgKiBOdW1iZXIodGhpcy5pbnB1dD8udmFsdWUpKS50b0xvY2FsZVN0cmluZygpXG5cbiAgICBpZiAodGFyaWZmPy5wcmljZSAmJiBub3RDdXJyZW50VGFyaWZmICYmICFyZWFzb24gJiYgdGhpcy5pbnB1dCAmJiBub3RQYWNrYWdlVGFyaWZmKSB7XG4gICAgICBwcmljZVRleHQgPSBg0JrRg9C/0LjRgtGMINC30LAgJHtwcmljZX0g4oK9YFxuICAgIH0gZWxzZSBpZiAoIW5vdFBhY2thZ2VUYXJpZmYgJiYgbm90Q3VycmVudFRhcmlmZikge1xuICAgICAgcHJpY2VUZXh0ID0gYNCS0YvQsdGA0LDRgtGMICR7dGFyaWZmLm5hbWV9YFxuICAgIH0gZWxzZSBpZiAocmVhc29uKSB7XG4gICAgICBwcmljZVRleHQgPSByZWFzb25cbiAgICB9IGVsc2Uge1xuICAgICAgcHJpY2VUZXh0ID0gJ9Ci0LXQutGD0YnQuNC5INGC0LDRgNC40YQnXG4gICAgfVxuXG4gICAgY29uc3QgaHJlZiA9IHRoaXMuY3JlYXRlSHJlZih0YXJpZmYpXG5cbiAgICBpZiAoIW5vdEN1cnJlbnRUYXJpZmYpIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJylcblxuICAgIGJ1dHRvbi5pbm5lckhUTUwgPSBgXG4gICAgICA8YSBjbGFzcz1cInNhYXMtc2hvcC1jYXJkLWJ1dHRvbi1ocmVmXCIgaHJlZj1cIiR7aHJlZn1cIiB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgICAgICAke3ByaWNlVGV4dH1cbiAgICAgIDwvYT5cbiAgICAgIGBcbiAgfVxuXG4gIHByaXZhdGUgY2hlY2tUYXJpZmYgPSAodGFyaWZmTGlzdDogSVBsYW5bXSkgPT4ge1xuICAgIC8vQHRzLWlnbm9yZVxuICAgIHRoaXMuaW5wdXQ/LnZhbHVlID0gTnVtYmVyKHRoaXMuaW5wdXQhLnZhbHVlKSA+IDk5OTk5ID8gOTk5OTkgOiBOdW1iZXIodGhpcy5pbnB1dD8udmFsdWUpXG4gICAgaWYgKHRoaXMuaW5wdXQpIHRoaXMuaW5wdXQuc3R5bGUud2lkdGggPSB0aGlzLmlucHV0LnZhbHVlLmxlbmd0aCAqIDkgKyAncHgnXG4gICAgaWYgKHRoaXMuY291bnROYW1lKSB0aGlzLmNvdW50TmFtZS50ZXh0Q29udGVudCA9IHRoaXMudXNlclRleHQoTnVtYmVyKHRoaXMuaW5wdXQ/LnZhbHVlKSlcblxuICAgIGZvciAoY29uc3QgZWwgb2YgdGhpcy5jYXJkTGlzdCkge1xuICAgICAgY29uc3QgdGFyaWZmID0gdGFyaWZmTGlzdC5maW5kKChpdGVtKSA9PiBpdGVtLmlkLnRvU3RyaW5nKCkgPT09IGVsLmRhdGFzZXQudGFyaWZmaWQpXG4gICAgICBjb25zdCByZWFzb24gPSB0aGlzLmNoZWNrTGljZW5zZXNDb3VudChlbCwgTnVtYmVyKHRoaXMuaW5wdXQ/LnZhbHVlKSwgdGFyaWZmKVxuXG4gICAgICB0aGlzLnNldEJ1dHRvbihlbCwgdGFyaWZmLCByZWFzb24pXG5cbiAgICAgIGNvbnN0IHByaWNlVGV4dCA9IGVsLnF1ZXJ5U2VsZWN0b3IoJy5zYWFzLXNob3AtcHJpY2UtdGV4dCcpXG4gICAgICBjb25zdCBwcmljZSA9IGVsLnF1ZXJ5U2VsZWN0b3IoJy5zYWFzLXNob3AtcHJpY2UtdmFsdWUnKVxuICAgICAgY29uc3QgdmFyaWFibGVPZlBlcmlvZCA9IHRoaXMucGVyaW9kLmNoZWNrZWQgPyAn0LfQsCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8g0LIg0LPQvtC0JyA6ICfQt9CwINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyDQsiDQvNC10YHRj9GGJ1xuICAgICAgY29uc3QgeWVhclByaWNlV2l0aERpc2NvdW50ID1cbiAgICAgICAgdGhpcy5wZXJpb2QuY2hlY2tlZCAmJiB0YXJpZmYuZGlzY291bnRcbiAgICAgICAgICA/ICh0YXJpZmYucHJpY2UgKiAxMiAqICgoMTAwIC0gdGFyaWZmLmRpc2NvdW50KSAvIDEwMCkpLnRvTG9jYWxlU3RyaW5nKClcbiAgICAgICAgICA6ICh0YXJpZmYucHJpY2UgKiAxMikudG9Mb2NhbGVTdHJpbmcoKVxuXG4gICAgICBwcmljZVRleHQudGV4dENvbnRlbnQgPVxuICAgICAgICB0YXJpZmYubWF4TGljZW5zZUNvdW50ID09PSB0YXJpZmYubWluTGljZW5zZUNvdW50XG4gICAgICAgICAgPyBg0LTQviAke3RhcmlmZi5tYXhMaWNlbnNlQ291bnR9INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5YFxuICAgICAgICAgIDogdmFyaWFibGVPZlBlcmlvZFxuICAgICAgcHJpY2UudGV4dENvbnRlbnQgPSB0aGlzLnBlcmlvZC5jaGVja2VkID8gYCR7eWVhclByaWNlV2l0aERpc2NvdW50fSDigr1gIDogYCR7dGFyaWZmLnByaWNlLnRvTG9jYWxlU3RyaW5nKCl9IOKCvWBcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZUhyZWYgPSAodGFyaWZmOiBJUGxhbikgPT4ge1xuICAgIGNvbnN0IGFubnVhbGx5ID0gdGhpcy5wZXJpb2QuY2hlY2tlZCA/ICcmYW5udWFsbHk9dHJ1ZScgOiAnJ1xuICAgIGNvbnN0IGxpY2Vuc2VzQ291bnQgPVxuICAgICAgdGhpcy5pbnB1dD8udmFsdWUgJiYgdGFyaWZmLm1heExpY2Vuc2VDb3VudCAhPT0gdGFyaWZmLm1pbkxpY2Vuc2VDb3VudFxuICAgICAgICA/IHRoaXMuaW5wdXQ/LnZhbHVlXG4gICAgICAgIDogdGFyaWZmLm1heExpY2Vuc2VDb3VudFxuXG4gICAgcmV0dXJuIChcbiAgICAgIHRoaXMucmVkaXJlY3RVcmwgK1xuICAgICAgYC8jL2NoZWNrb3V0P3Byb2R1Y3RJZD0ke3RoaXMucHJvZHVjdElkfSZ0YXJpZmZJZD0ke3RhcmlmZi5pZH0ke2FubnVhbGx5fSZsaWNlbnNlc0NvdW50PSR7bGljZW5zZXNDb3VudH1gXG4gICAgKVxuICB9XG5cbiAgcHJpdmF0ZSBjYWxjUGx1cyA9IChlbDogSFRNTERpdkVsZW1lbnQsIG1heDogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgaW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgPSBlbD8ucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCcuc2Fhcy1zaG9wLWZvcm0taW5wdXQnKVxuICAgIGNvbnN0IGNvdW50ID0gcGFyc2VJbnQoaW5wdXQudmFsdWUpICsgMVxuXG4gICAgaWYgKG1heCA+PSBjb3VudCkge1xuICAgICAgLy9AdHMtaWdub3JlXG4gICAgICBpbnB1dC52YWx1ZSA9IGNvdW50XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjYWxjTWludXMgPSAoZWw6IEhUTUxEaXZFbGVtZW50KSA9PiB7XG4gICAgbGV0IGlucHV0OiBIVE1MSW5wdXRFbGVtZW50ID0gZWw/LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignLnNhYXMtc2hvcC1mb3JtLWlucHV0JylcbiAgICBsZXQgY291bnQgPSBwYXJzZUludChpbnB1dC52YWx1ZSkgLSAxXG5cbiAgICBpZiAoMSA8PSBjb3VudCkge1xuICAgICAgLy9AdHMtaWdub3JlXG4gICAgICBpbnB1dC52YWx1ZSA9IGNvdW50XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzZXRQZXJpb2QgPSAoZWw6IGFueSwgdjogYm9vbGVhbikgPT4ge1xuICAgIGNvbnN0IGlucHV0OiBIVE1MSW5wdXRFbGVtZW50ID0gZWw/LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignLnNhYXMtc2hvcC1wZXJpb2QtaW5wdXQnKVxuICAgIGlucHV0LmNoZWNrZWQgPSB2XG4gIH1cblxuICBwcml2YXRlIHVzZXJUZXh0ID0gKGNvdW50OiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBsYXN0TnVtYmVyID0gK2NvdW50LnRvU3RyaW5nKCkuc2xpY2UoLTEpXG4gICAgY29uc3QgcHJlTGFzdE51bWJlciA9ICtjb3VudC50b1N0cmluZygpLnNsaWNlKC0yLCAtMSlcbiAgICBpZiAobGFzdE51bWJlciA9PT0gMSAmJiBwcmVMYXN0TnVtYmVyICE9PSAxKSB7XG4gICAgICByZXR1cm4gJ9C/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCdcbiAgICB9IGVsc2UgaWYgKGxhc3ROdW1iZXIgPiAxICYmIGxhc3ROdW1iZXIgPCA1ICYmIHByZUxhc3ROdW1iZXIgIT09IDEpIHtcbiAgICAgIHJldHVybiAn0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPJ1xuICAgIH0gZWxzZSByZXR1cm4gJ9C/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5J1xuICB9XG5cbiAgcHJpdmF0ZSBjb25kaXRpb25Vc2VyVGV4dCA9IChjb3VudDogbnVtYmVyKSA9PiB7XG4gICAgcmV0dXJuIGNvdW50LnRvU3RyaW5nKCkuc2xpY2UoLTEpID09PSAnMScgPyAn0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPJyA6ICfQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuSdcbiAgfVxufVxuIiwiaW1wb3J0IHsgV2lkZ2V0U2Fhc1Nob3BQcmVzZW50ZXIgfSBmcm9tICcuL3ByZXNlbnRlci9XaWRnZXRTYWFzU2hvcFByZXNlbnRlcidcbmltcG9ydCAnLi9zdHlsZS5jc3MnXG5cbmNvbnN0IHByb2R1Y3RJZCA9ICc5M2M1NmE0Yy0zMzI0LTQ1NGQtOWRmZi0wOTQzMzVmNjZmNDAnXG5jb25zdCBhcGkgPSAnaHR0cHM6Ly9zYWFzLXNob3AtYXBpLmRldi5tcnNhcHAucnUnXG5jb25zdCByZWRpcmVjdFVybCA9XG4gIGxvY2F0aW9uLmhvc3QgPT09ICdzYWFzLXNob3AuY2l0cm9uaXVtLmNvbScgPyAnaHR0cHM6Ly9hY2NvdW50LnNhYXMtc2hvcC5jaXRyb25pdW0uY29tJyA6ICdodHRwOi8vbG9jYWxob3N0OjQwMDEnXG5jb25zdCBpZENvbnRhaW5lciA9ICcuc2Fhc19zaG9wX3RhcmlmZnMnXG5cbnZhciBOZXdXaWRnZXQgPSBuZXcgV2lkZ2V0U2Fhc1Nob3BQcmVzZW50ZXIoe1xuICBpZENvbnRhaW5lcixcbiAgYXBpLFxuICByZWRpcmVjdFVybCxcbiAgcHJvZHVjdElkLFxufSlcblxud2luZG93LldpZGdldENvbmZpZyA9IHtcbiAgc3Vic2NyaXB0aW9uSWQ6ICczJyxcbn1cblxuaWYgKHdpbmRvdy5XaWRnZXRDb25maWcpIHtcbiAgTmV3V2lkZ2V0LmluaXQod2luZG93LldpZGdldENvbmZpZylcbn0gZWxzZSBOZXdXaWRnZXQuaW5pdCgpXG4iLCJpbXBvcnQgeyBJQ29uZmlnLCBJV2lkZ2V0U2Fhc1Nob1ByZXNlbnRlciwgSVdpZGdldFNhYXNTaG9wUGFyYW1zIH0gZnJvbSAnLi9JV2lkZ2V0U2Fhc1Nob3AnXG5pbXBvcnQgeyBXaWRnZXRCb3ggfSBmcm9tICcuL3dpZGdldEJveC9XaWRnZXRCb3gnXG5cbmV4cG9ydCBjbGFzcyBXaWRnZXRTYWFzU2hvcFByZXNlbnRlciBpbXBsZW1lbnRzIElXaWRnZXRTYWFzU2hvUHJlc2VudGVyIHtcbiAgaWRDb250YWluZXI6IHN0cmluZyA9ICcnXG4gIGFwaTogc3RyaW5nID0gJydcbiAgcmVkaXJlY3RVcmw6IHN0cmluZyA9ICcnXG4gIHByb2R1Y3RJZDogc3RyaW5nIHwgbnVsbCA9IG51bGxcblxuICBjb25zdHJ1Y3RvcihwYXJhbXM6IElXaWRnZXRTYWFzU2hvcFBhcmFtcykge1xuICAgIHRoaXMuaWRDb250YWluZXIgPSBwYXJhbXMuaWRDb250YWluZXJcbiAgICB0aGlzLmFwaSA9IHBhcmFtcy5hcGlcbiAgICB0aGlzLnJlZGlyZWN0VXJsID0gcGFyYW1zLnJlZGlyZWN0VXJsXG4gICAgdGhpcy5wcm9kdWN0SWQgPSBwYXJhbXMucHJvZHVjdElkXG4gIH1cblxuICBpbml0KGNvbmZpZz86IElDb25maWcpOiB2b2lkIHtcbiAgICBmZXRjaCh0aGlzLmFwaSArICcvcHJvZHVjdHMvJyArIHRoaXMucHJvZHVjdElkICsgJy9wbGFucycpXG4gICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXNUZXh0KSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKVxuICAgICAgfSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpXG4gICAgICB9KVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5pZENvbnRhaW5lcikpIHtcbiAgICAgICAgICBjb25zdCB3aWRnZXRCb3ggPSBuZXcgV2lkZ2V0Qm94KHtcbiAgICAgICAgICAgIHdpZGdldEJveDogZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmlkQ29udGFpbmVyKSxcbiAgICAgICAgICAgIHJlZGlyZWN0VXJsOiB0aGlzLnJlZGlyZWN0VXJsLFxuICAgICAgICAgICAgcHJvZHVjdElkOiB0aGlzLnByb2R1Y3RJZCxcbiAgICAgICAgICAgIHBsYW5zOiBkYXRhLFxuICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgIH0pXG4gICAgICAgICAgd2lkZ2V0Qm94LndpZGdldENyZWF0ZSgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWxlcnQoJ0NvbnRhaW5lciB3aXRoIGlkICcgKyB0aGlzLmlkQ29udGFpbmVyICsgJyBub3QgZm91bmQhJylcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgICB9KVxuICB9XG59XG4iXSwibmFtZXMiOlsiV2lkZ2V0Qm94IiwiY29uc3RydWN0b3IiLCJwYXJhbXMiLCJ3aWRnZXRCb3giLCJ1bmRlZmluZWQiLCJyZWRpcmVjdFVybCIsInByb2R1Y3RJZCIsImNhcmRMaXN0IiwiaW5wdXQiLCJwbHVzIiwibWludXMiLCJwZXJpb2QiLCJjb3VudE5hbWUiLCJtb250aFBlcmlvZCIsInllYXJQZXJpb2QiLCJ3aWRnZXRDcmVhdGUiLCJ0aGlzIiwidGFyaWZmTGlzdCIsInBsYW5zIiwiZGlzY291bnQiLCJtYXhpbXVtVXNlcnMiLCJpc0NvdW50Q29udGFpbmVyIiwiZm9yRWFjaCIsImVsIiwibWF4TGljZW5zZUNvdW50IiwibWluTGljZW5zZUNvdW50IiwidGVtcG9yYXJ5V2lkZ2V0IiwidGVtcG9yYXJ5Q2FyZCIsInN0eWxlRm9yQnRuIiwiaWQiLCJjb25maWciLCJoaWdodGxpZ2h0IiwiaXNEaXNhYmxlZCIsInN1YnNjcmlwdGlvbklkIiwibmFtZSIsInByaWNlIiwidG9Mb2NhbGVTdHJpbmciLCJkZXNjcmlwdGlvbiIsIm91dHB1dENhcmRMaXN0IiwiaW5uZXJIVE1MIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwicXVlcnlTZWxlY3RvciIsImNoZWNrVGFyaWZmIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbGNQbHVzIiwiY2FsY01pbnVzIiwiZXZlbnQiLCJzZXRQZXJpb2QiLCJ0YXJnZXQiLCJwYXJlbnROb2RlIiwiY2hlY2tMaWNlbnNlc0NvdW50IiwiaW5wdXRWYWx1ZSIsInRhcmlmZiIsImJ0biIsInNldEF0dHJpYnV0ZSIsImNvbmRpdGlvblVzZXJUZXh0IiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QnV0dG9uIiwicmVhc29uIiwiYnV0dG9uIiwicHJpY2VUZXh0Iiwibm90Q3VycmVudFRhcmlmZiIsIm5vdFBhY2thZ2VUYXJpZmYiLCJwcmljZVdpdGhEaXNjb3VudCIsIk51bWJlciIsInZhbHVlIiwiY2hlY2tlZCIsImhyZWYiLCJjcmVhdGVIcmVmIiwic3R5bGUiLCJ3aWR0aCIsImxlbmd0aCIsInRleHRDb250ZW50IiwidXNlclRleHQiLCJmaW5kIiwiaXRlbSIsInRvU3RyaW5nIiwiZGF0YXNldCIsInRhcmlmZmlkIiwidmFyaWFibGVPZlBlcmlvZCIsInllYXJQcmljZVdpdGhEaXNjb3VudCIsImFubnVhbGx5IiwibGljZW5zZXNDb3VudCIsIm1heCIsImNvdW50IiwicGFyc2VJbnQiLCJ2IiwibGFzdE51bWJlciIsInNsaWNlIiwicHJlTGFzdE51bWJlciIsImxvY2F0aW9uIiwiaG9zdCIsIk5ld1dpZGdldCIsImlkQ29udGFpbmVyIiwiYXBpIiwiaW5pdCIsImZldGNoIiwidGhlbiIsInJlc3BvbnNlIiwic3RhdHVzIiwiUHJvbWlzZSIsInJlamVjdCIsIkVycm9yIiwic3RhdHVzVGV4dCIsInJlc29sdmUiLCJqc29uIiwiZGF0YSIsImFsZXJ0IiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJXaWRnZXRDb25maWciXSwic291cmNlUm9vdCI6IiJ9