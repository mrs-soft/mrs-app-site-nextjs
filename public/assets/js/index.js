(()=>{"use strict";class t{constructor(t){this.widgetBox=void 0,this.redirectUrl="",this.productId=null,this.cardList=null,this.input=null,this.plus=null,this.minus=null,this.period=null,this.countName=null,this.monthPeriod=null,this.yearPeriod=null,this.widgetCreate=()=>{var t,i,e,s,n,o;const r=this.widgetBox,a=this.plans||[];let c=0,d=1,u=!1;a.forEach((t=>{t.maxLicenseCount>d&&(d=t.maxLicenseCount),t.discount>c&&(c=t.discount),t.maxLicenseCount===t.minLicenseCount||u||(u=!0)}));const l=`\n      <div class="saas-shop-container">\n        <div class="saas-shop-title">Выберите подписку</div>\n        <div class="saas-shop-common-form">\n         ${u?`<div class="saas-shop-count-container">\n            <div class="saas-shop-form-minus"></div>\n            <div class="body2">\n              <input class="saas-shop-form-input" type="number" name="count" min="1"  max="${d}" value="1" \n                      onkeydown="this.style.width = ((this.value.length+1 ) * 9) + 'px';" onkeyup="if(this.value<0) value=1;">\n              <span class="saas-shop-count-name">пользователь</span>\n            </div>\n            <div class="saas-shop-form-plus"></div>\n          </div>`:""}\n          <label class="saas-shop-period-container">\n            <input type="checkbox" class="saas-shop-period-input">\n            <button class="saas-shop-period-month">\n             Месячная\n            </button>\n            <button class="saas-shop-period-year">\n             Годовая\n            </button>  \n            ${c?`<div class="saas-shop-period-sale" > - ${c}% </div>`:""}\n          </label>\n        </div>\n        <div class="saas-shop-card-container"> \n          ${(()=>{let t="";return a.forEach((i=>{var e,s;const n=i.id===(null===(e=this.config)||void 0===e?void 0:e.hightlight)?"contained":"outlined",o=i.id===(null===(s=this.config)||void 0===s?void 0:s.subscriptionId)?"disabled":"";t+=`\n          <div class="saas-shop-card" data-tariffid="${i.id}" >\n            <div class="saas-shop-card-name subtitle2">${i.name}</div>\n            <h5 class="saas-shop-price-value">\n              ${i.price.toLocaleString()} ₽\n               <span> ₽ </span>\n            </h5>\n            <div class="saas-shop-price-text body2">за пользователя в </div>\n            <div class="saas-shop-description body2">${i.description}</div>\n              <button class="saas-shop-card-button-container ${n} large" disabled=${o}></button>\n          </div>    \n          `})),t})()}\n        </div>\n      </div>`;r.innerHTML+=l,this.cardList=document.querySelectorAll(".saas-shop-card"),this.input=document.querySelector(".saas-shop-form-input"),this.plus=document.querySelector(".saas-shop-form-plus"),this.minus=document.querySelector(".saas-shop-form-minus"),this.period=document.querySelector(".saas-shop-period-input"),this.countName=document.querySelector(".saas-shop-count-name"),this.monthPeriod=document.querySelector(".saas-shop-period-month"),this.yearPeriod=document.querySelector(".saas-shop-period-year"),this.checkTariff(a),null===(t=this.input)||void 0===t||t.addEventListener("change",(()=>{this.checkTariff(a)})),null===(i=this.plus)||void 0===i||i.addEventListener("click",(()=>{this.calcPlus(this.plus,d),this.checkTariff(a)})),null===(e=this.minus)||void 0===e||e.addEventListener("click",(()=>{this.calcMinus(this.minus),this.checkTariff(a)})),null===(s=this.monthPeriod)||void 0===s||s.addEventListener("click",(t=>{this.setPeriod(t.target,!1)})),null===(n=this.yearPeriod)||void 0===n||n.addEventListener("click",(t=>{this.setPeriod(t.target,!0)})),null===(o=this.period)||void 0===o||o.parentNode.addEventListener("click",(()=>{this.checkTariff(a)}))},this.checkLicensesCount=(t,i,e)=>{const s=t.querySelector(".saas-shop-card-button-container");return i>e.maxLicenseCount&&e.minLicenseCount!==e.maxLicenseCount?(s.setAttribute("disabled","disabled"),`До ${e.maxLicenseCount} ${this.conditionUserText(e.maxLicenseCount)}`):i<e.minLicenseCount&&e.maxLicenseCount!==e.minLicenseCount?(s.setAttribute("disabled","disabled"),`От ${e.minLicenseCount} ${this.conditionUserText(e.minLicenseCount)}`):void s.removeAttribute("disabled")},this.setButton=(t,i,e)=>{var s,n,o,r;const a=t.querySelector(".saas-shop-card-button-container");let c="";const d=(null===(s=this.config)||void 0===s?void 0:s.subscriptionId)!==i.id,u=i.maxLicenseCount!==i.minLicenseCount,l=i.discount?(null==i?void 0:i.price)*Number(null===(n=this.input)||void 0===n?void 0:n.value)*12*((100-i.discount)/100):(null==i?void 0:i.price)*Number(null===(o=this.input)||void 0===o?void 0:o.value)*12,h=(this.period.checked?l:(null==i?void 0:i.price)*Number(null===(r=this.input)||void 0===r?void 0:r.value)).toLocaleString();c=(null==i?void 0:i.price)&&d&&!e&&this.input&&u?`Купить за ${h} ₽`:!u&&d?`Выбрать ${i.name}`:e||"Текущий тариф";const p=this.createHref(i);d||a.setAttribute("disabled","disabled"),a.innerHTML=`\n      <p class="saas-shop-card-button-href">\n          ${c}\n      </p>\n      `,a.onclick=()=>{window.open(p,"_blank")}},this.checkTariff=t=>{var i,e,s,n;null===(i=this.input)||void 0===i||(i.value=Number(this.input.value)>99999?99999:Number(null===(e=this.input)||void 0===e?void 0:e.value)),this.input&&(this.input.style.width=9*this.input.value.length+"px"),this.countName&&(this.countName.textContent=this.userText(Number(null===(s=this.input)||void 0===s?void 0:s.value)));for(const i of this.cardList){const e=t.find((t=>t.id.toString()===i.dataset.tariffid)),s=this.checkLicensesCount(i,Number(null===(n=this.input)||void 0===n?void 0:n.value),e);this.setButton(i,e,s);const o=i.querySelector(".saas-shop-price-text"),r=i.querySelector(".saas-shop-price-value"),a=this.period.checked?"за пользователя в год":"за пользователя в месяц",c=this.period.checked&&e.discount?(12*e.price*((100-e.discount)/100)).toLocaleString():(12*e.price).toLocaleString();o.textContent=e.maxLicenseCount===e.minLicenseCount?`до ${e.maxLicenseCount} пользователей`:a,r.textContent=this.period.checked?`${c} ₽`:`${e.price.toLocaleString()} ₽`}},this.createHref=t=>{var i,e;const s=this.period.checked?"&annually=true":"",n=(null===(i=this.input)||void 0===i?void 0:i.value)&&t.maxLicenseCount!==t.minLicenseCount?null===(e=this.input)||void 0===e?void 0:e.value:t.maxLicenseCount;return this.redirectUrl+`/checkout?productId=${this.productId}&tariffId=${t.id}${s}&licensesCount=${n}`},this.calcPlus=(t,i)=>{const e=null==t?void 0:t.parentNode.querySelector(".saas-shop-form-input"),s=parseInt(e.value)+1;i>=s&&(e.value=s)},this.calcMinus=t=>{let i=null==t?void 0:t.parentNode.querySelector(".saas-shop-form-input"),e=parseInt(i.value)-1;1<=e&&(i.value=e)},this.setPeriod=(t,i)=>{(null==t?void 0:t.parentNode.querySelector(".saas-shop-period-input")).checked=i},this.userText=t=>{const i=+t.toString().slice(-1),e=+t.toString().slice(-2,-1);return 1===i&&1!==e?"пользователь":i>1&&i<5&&1!==e?"пользователя":"пользователей"},this.conditionUserText=t=>"1"===t.toString().slice(-1)?"пользователя":"пользователей",this.widgetBox=t.widgetBox,this.redirectUrl=t.redirectUrl,this.productId=t.productId,this.plans=t.plans,this.config=t.config}}var i;const e=(null===(i=window.WidgetConfig)||void 0===i?void 0:i.productId)?window.WidgetConfig.productId:"0eb84014-f370-4490-80ae-789473460cee";var s=new class{constructor(t){this.idContainer="",this.api="",this.redirectUrl="",this.productId=null,this.idContainer=t.idContainer,this.api=t.api,this.redirectUrl=t.redirectUrl,this.productId=t.productId}init(i){fetch(this.api+"/products/"+this.productId+"/plans").then((function(t){return 200!==t.status?Promise.reject(new Error(t.statusText)):Promise.resolve(t)})).then((function(t){return t.json()})).then((e=>{document.querySelector(this.idContainer)?new t({widgetBox:document.querySelector(this.idContainer),redirectUrl:this.redirectUrl,productId:this.productId,plans:e.sort(((t,i)=>t.price>i.price?1:-1)),config:i}).widgetCreate():alert("Container with id "+this.idContainer+" not found!")})).catch((t=>{console.log(t)}))}}({idContainer:".saas_shop_tariffs",api:"https://lk.mrsapp.ru/api",redirectUrl:"https://lk.mrsapp.ru",productId:e});window.WidgetConfig?s.init(window.WidgetConfig):s.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,